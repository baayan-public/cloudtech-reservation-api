version: 0.2
env:
  variables:
    AWS_DEFAULT_REGION: "ap-northeast-1"
    DOCKER_USER: AWS
    REPOSITORY_URI: "851725377005.dkr.ecr.ap-northeast-1.amazonaws.com"
    IMAGE_NAME: api-repository
    IMAGE_TAG: latest 

phases:
  pre_build:
    commands:
      - echo "ECRへログイン"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username $DOCKER_USER --password-stdin $REPOSITORY_URI
  build:
    commands:
      - echo "ビルド開始"
      - docker build -t "$REPOSITORY_URI/$IMAGE_NAME:latest" .
  post_build:
    commands:
      - echo "ECRへpush"
      - docker push "$REPOSITORY_URI/$IMAGE_NAME:latest"
      - printf '{"Version":"1.0","ImageURI":"%s"}' $REPOSITORY_URI/$IMAGE_NAME:$IMAGE_TAG > imageDetail.json
artifacts:
  files: 
    - imageDetail.json
    - appspec.yml




  version: 0.2
env:
  variables:
    ECR_REPO_NAME: code-ecr
phases:
  pre_build:
    commands:
      - echo "hello"
      
      #ECR login
      - ECR_MAIN_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_MAIN_URI}

      - ECR_IMAGE_URI="${ECR_MAIN_URI}/${ECR_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"
  build:
    commands:
      - docker build -t cth1-container:latest .
  post_build:
    commands:
      - docker tag cth1-container:latest ${ECR_IMAGE_URI}
      - docker push ${ECR_IMAGE_URI}

      #step3  Generate image definitions file for ECS
      - printf '{"ImageURI":"%s"}' ${ECR_IMAGE_URI} > imageDetail.json

artifacts:
  files:
#    - imagedefinitions.json
    - appspec.yml
    - taskdef.json
    - imageDetail.json